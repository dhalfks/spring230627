package com.myweb.www.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.myweb.www.domain.BoardVO;
import com.myweb.www.service.BoardService;

import lombok.extern.slf4j.Slf4j;

@RequestMapping("/board/*")
@Slf4j
@Controller
public class BoardController {

	@Inject
	private BoardService bsv;
	
	@GetMapping("/register")
	public String registerGet() {
		return "/board/register";
	}
	
	@PostMapping("/register")
	public String registerPost(BoardVO bvo, RedirectAttributes rAttr) {
		log.info(">>> bvo "+bvo.toString());
		int isOk = bsv.register(bvo);
		log.info(">> board register >>"+ (isOk >0 ? "OK" : "FAIL"));
		rAttr.addFlashAttribute("isOk", isOk);
		return "redirect:/board/list";
	}
	
	//insert, update, delete => redirect 처리
	//RedirectAttributes 객체사용 : 데이터의 새로고침
	
	@GetMapping("/list")
	public String list(Model m) {
		List<BoardVO> list = bsv.getList();
		m.addAttribute("list", list);
		return "/board/list";
	}
	
	//detail을 가져와야 하는 케이스 : detail, modify
	@GetMapping({"/detail","/modify"})
	public void detail(Model m, @RequestParam("bno")int bno) {
		log.info(">>>bno "+bno);
		BoardVO bvo = bsv.getDetail(bno);
		m.addAttribute("board", bvo);
	}
	
}
