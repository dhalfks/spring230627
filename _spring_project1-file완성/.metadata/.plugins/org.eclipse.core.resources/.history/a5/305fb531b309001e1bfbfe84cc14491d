document.getElementById('trigger').addEventListener('click',()=>{
    document.getElementById('file').click();
})

//정규표현식을 사용하여 생성자 함수를 만들기
//실행파일 막기, 이미지파일인지 아닌지 체크
//fileUpload시 형식제한 함수
const regExp = new RegExp("\.(exe|sh|bat|msi|dll|js)$"); //실행파일 막기
const regExpImg = new RegExp("\.(jpg|jpeg|png|gif|bmp)$"); //이미지파일
const maxSize = 1024*1024*20; //20M 보다 큰지 확인

function fileSizeValidation(fileName, fileSize){
    if(regExp.test(fileName)){ //실행파일임.
        return 0;
    }else if(regExpImg.test(fileName)){
        return 0;
    }else if(fileSize > maxSize){
        return 0;
    }else {
        return 1;
    }
}

// image file에 따라서 체크 
document.addEventListener('change',(e)=>{
    if(e.target.id == "file"){
        //첨부되지 말아야하는 파일이 들어왔을 때 클릭되는것을 방지
        document.getElementById('regBtn').disabled = false; 
        //input type="file" element fileObject 객체로 리턴
        const fileObject = document.getElementById('file').files;
        console.log(fileObject);

        let div = document.getElementById('fileZone');
        div.innerHTML="";
        let ul ='<ul class="list-group list-group-flush">';
        let isOk = 1;
        for(let file of fileObject){
            let validResult = fileSizeValidation(file.name, file.size);
            isOk *= validResult; //모든 첨부파일의 결과가 1이여야 통과
            ul+=`<li class="list-group-item d-flex justify-content-between align-items-start">`;
            //업로드 가능여부 표시
            ul+= `${validResult ? '<div class="fw-bold">업로드가능' 
                : '<div class="fw-bold text-danger">업로드불가'}</div>`;
            ul+=`${file.name}`;
            ul+=`<span class="badge bg-${validResult ? 'success':'danger'} rounded-pill">
                ${file.size} Bytes</span></li>`;
        }
        ul+= `</ul>`;
        div.innerHTML= ul;

        if(isOk == 0){
            document.getElementById('regBtn').disabled = true;
        }
    }
})
